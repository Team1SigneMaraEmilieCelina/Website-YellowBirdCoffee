---
import Layout from "../../layouts/Layout.astro";
import Menublack from "../../components/menublack.astro";
import Footer from "../../components/footer.astro";
import Amount from "../../components/amount.astro";
import SquareCTA from "../../components/SquareCTA.astro";
import Brewguide from "../../components/brewguide.astro";
import Menublack from "../../components/menublack.astro";
import Productslider from "../../components/productslider.astro";

// Vi henter alle ID’er til de produkter, vi gerne vil lave individuelle sider for:
export async function getStaticPaths() {
  // Det her er nøglen til vores Supabase-database – den giver adgang til at hente data
  const apikey =
    "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqaW9pbG52bW1ha3lvY3FhdXdoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc4OTk5MzAsImV4cCI6MjA2MzQ3NTkzMH0.lJHBOdRj_eDmkVncIRtyW1Ty8UleaWHyYMXT0tNxPhs";
  const url = "https://xjioilnvmmakyocqauwh.supabase.co/rest/v1/Products?select=id";
  // Her henter vi kun ID’erne fra databasen

  // fetch = "gå ud på nettet og hent noget"
  // await = "vent på svaret, før vi går videre"
  const res = await fetch(url, {
    headers: {
      apikey: apikey, // vi sender nøglen med som adgang
    },
  });

  const data = await res.json(); // Vi laver svaret om til et JavaScript-array

  // Her laver vi en liste over ID’er, som Astro bruger til at bygge en side til hvert produkt
  //  map = "for hver ting i arrayet, gør dette"
  // params = bruges af Astro til at lave sider med fx /produkt/1 og /produkt/2
  return data.map((product) => ({
    params: { id: product.id.toString() }, // id skal være tekst (string)
  }));
}

// 2. Hent produktdata baseret på ID:
const { id } = Astro.params; // Her får vi id’et fra URL’en – fx “3” hvis vi er på /produkt/3

const apikey =
  "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqaW9pbG52bW1ha3lvY3FhdXdoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc4OTk5MzAsImV4cCI6MjA2MzQ3NTkzMH0.lJHBOdRj_eDmkVncIRtyW1Ty8UleaWHyYMXT0tNxPhs";
const url = `https://xjioilnvmmakyocqauwh.supabase.co/rest/v1/Products?id=eq.${id}&select=*`;

const options = {
  headers: {
    apikey: apikey,
  },
};
// Nu henter vi det ene produkt med det ID vi fik fra URL’en
const data = await fetch(url, options).then((res) => res.json());
// Vi får et array, men der er kun ét produkt i – så vi tager det første (og eneste)
const product = data[0];

// apikey:
// Forklaring: En slags adgangskode, der giver os lov til at hente data fra databasen.
// Eksempel: Skal med i vores fetch-kald, ellers får vi ikke adgang.

// array
// En liste med flere ting i – fx en liste med produkter.
// Eksempel: data = [produkt1, produkt2, produkt3].

// async
// Betyder at funktionen kan arbejde “asynkront” – altså vente på data uden at fryse alt andet.
// Eksempel: Bruges sammen med await.

// async
// Betyder at funktionen kan arbejde “asynkront” – altså vente på data uden at fryse alt andet.
// Eksempel: Bruges sammen med await.

// Astro.params
// Giver adgang til den værdi, der står i URL’en – fx produktets ID.
// Eksempel: På /produkt/3 er Astro.params.id = 3.
// Params Betyder “parametre” – altså værdier fra URL’en.

// getStaticPaths()
// En Astro-funktion, der bygger statiske sider for hver produkt-id.
// Eksempel: Bruges til at lave sider som /produkt/1, /produkt/2 osv.
---

<!-- 3. Vis produktet{
  product ? (
    <article>
      <h1>{product.display_name}</h1>
      <img src={product.img1} alt={product.display_name} />
      <p>Bønne: {product.bean}</p>
      <p>Pris: {product.price_250} kr. / 250g</p>
      <p>{product.description}</p>
      <div class="icons">
        <img src={product.icon1} alt={product.icon1_text} />
        <img src={product.icon2} alt={product.icon2_text} />
        <img src={product.icon3} alt={product.icon3_text} />
      </div>
      <Amount />
    </article>
  ) : (
    // Hvis produktet ikke findes, vis en fejlbesked
    <p>Produktet blev ikke fundet.</p>
  )
} -->
<Layout>
  <header>
    <Menublack />
  </header>
  <main>
    <a href="/shopcoffee">Tilbage</a>

    {
      product ? (
        <article>
          <h1>{product.display_name}</h1>
          <section class="productpictures">
              <img class="img1" src={product.img1} alt={product.display_name} />
              <img class="img2" src={product.img2} alt={product.display_name} />
              <img class="img3" src={product.img3} alt={product.display_name} />
              <img class="img4" src={product.img4} alt={product.display_name} />
            </div>
            <div class="grid_1-1-1-1">
              <img class="gridimg1" src={product.img1} alt={product.display_name} />
              <img class="gridimg2" src={product.img2} alt={product.display_name} />
              <img class="gridimg3" src={product.img3} alt={product.display_name} />
              <img class="gridimg4" src={product.img4} alt={product.display_name} />
            </div>
          </section>
          <p>
            <strong>Bønne: {product.bean}</strong>
          </p>
          <p>
            <strong>Pris: {product.price_250} kr. / 250g </strong>
          </p>
          <p>
            <strong>Pris: {product.price_1000} kr. / 1000g</strong>
          </p>
          <p>{product.description}</p>
          <div class="grid_1-1">
            <div class="icons">
              <img src={product.icon1} />
              <p>{product.icon1_text}</p>
              <img src={product.icon2} />
              <p>{product.icon2_text}</p>
              <img src={product.icon3} />
              <p>{product.icon3_text}</p>
            </div>
            <Amount />
          </div>
        </article>
      ) : (
        // Hvis produktet ikke findes, vis en fejlbesked
        <p>Produktet blev ikke fundet.</p>
      )
    }
    <Brewguide />
    <h2>Se vores unikke kaffeudvalg</h2>
    <p>Oplev vores udvalg af selvristede kaffebønner med forskellige smagsnuancer og ristegrader – tilpasset enhver kaffesmag.</p>
    <Productslider />
  </main>
  <footer>
    <Footer />
  </footer>
</Layout>

<style>
  a {
    text-decoration: none;
    color: var(--background-color);
    background-color: var(--green-color);
    padding: 5px 7px;
    top: 150px;
    margin-bottom: 20px;
    font-size: 16px;
    left: 0;
  }

  main {
    margin-top: 80px;
    max-width: 100%;
  }

  article {
    overflow: hidden;
  }

  img {
    width: 100%;
    aspect-ratio: 1 / 1.5;
    /* Bruger aspect-ratio for at få alle billeder i samme højde */
    /* 1 = bredden af elementet */
    /* 1.5 = højden af billedet ift. bredden. Dvs. højden skal vær 150% større end bredden */
    object-fit: cover;
  }

  .grid_1-1-1-1 {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 10px;
    margin-top: 20px;
  }

  .grid_1-1-1-1 img {
    aspect-ratio: 1 / 1;
    object-fit: cover;
  }

  .addborder {
    border: solid 1px var(--black-color);
  }

  .hide {
    display: none;
  }

  .icons {
    display: grid;
    grid-template-columns: 1fr 4fr;
    column-gap: 10px;
    margin-bottom: 25px;
  }

  .icons img {
    width: 100%;
    object-fit: cover;
    aspect-ratio: 1 / 1;
  }

  .icons p {
    display: flex;
    align-items: center;
  }

  @media (min-width: 380px) {
    .grid_1-1 {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 10px;
    }
  }

  @media (min-width: 768px) {
    a {
      font-size: 18px;
      padding: 10px 10px;
    }

    .productpictures {
      display: grid;
      grid-template-columns: 5fr 1fr;
      gap: 20px;
      width: 70%;
      /* margin: 0 auto; */
    }

    .grid_1-1-1-1 {
      display: grid;
      grid-template-columns: 1fr;
      grid-template-rows: repeat(6, 1fr);
      gap: 10px;
    }

    article {
      overflow: hidden;
    }
  }
</style>

<script>
  import { getConfiguredImageService } from "astro:assets";

  // Definer variablerne globalt
  let image1, image2, image3, image4;
  let currentIndex = 0;

  window.addEventListener("load", start);

  function start() {
    // Initialiser variablerne
    image1 = document.querySelector(".img1");
    image2 = document.querySelector(".img2");
    image3 = document.querySelector(".img3");
    image4 = document.querySelector(".img4");

    const gridimage1 = document.querySelector(".gridimg1");
    const gridimage2 = document.querySelector(".gridimg2");
    const gridimage3 = document.querySelector(".gridimg3");
    const gridimage4 = document.querySelector(".gridimg4");

    // Skjul alle sektioner som standard
    hideAllScreens();
    image1?.classList.remove("hide");
    gridimage1?.classList.add("addborder");

    console.log("indlæst...");

    // Tilføj event listeners
    gridimage1?.addEventListener("click", () => {
      hideAllScreens();
      image1?.classList.remove("hide");
      gridimage1?.classList.add("addborder");
      [gridimage2, gridimage3, gridimage4].forEach((gridimage) => {
        gridimage?.classList.remove("addborder");
      });
      // forEach er en metode i JavaScript, der bruges til at iterere over hvert element i et array. For hvert element i arrayet udfører den en funktion, som du definerer.
    });

    gridimage2?.addEventListener("click", () => {
      hideAllScreens();
      image2?.classList.remove("hide");
      gridimage2?.classList.add("addborder");
      [gridimage1, gridimage3, gridimage4].forEach((gridimage) => {
        gridimage?.classList.remove("addborder");
      });
    });

    gridimage3?.addEventListener("click", () => {
      hideAllScreens();
      image3?.classList.remove("hide");
      gridimage3?.classList.add("addborder");
      [gridimage1, gridimage2, gridimage4].forEach((gridimage) => {
        gridimage?.classList.remove("addborder");
      });
    });

    gridimage4?.addEventListener("click", () => {
      hideAllScreens();
      gridimage4?.classList.add("addborder");
      image4?.classList.remove("hide");
      [gridimage1, gridimage2, gridimage3].forEach((gridimage) => {
        gridimage?.classList.remove("addborder");
      });
    });
  }

  function hideAllScreens() {
    image1?.classList.add("hide");
    image2?.classList.add("hide");
    image3?.classList.add("hide");
    image4?.classList.add("hide");
  }
</script>
