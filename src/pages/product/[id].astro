---
import Layout from "../../layouts/Layout.astro";
import Menublack from "../../components/menublack.astro";
import Footer from "../../components/footer.astro";
import Amount from "../../components/amount.astro";
import Brewguide from "../../components/brewguide.astro";
import Productslider from "../../components/productslider.astro";
import ProductPictures from "../../components/productpictures.astro";
import AmountCTA from "../../components/amountcta.astro";
import RoundCTA from "../../components/roundCTA.astro";
import Dropdowndescription from "../../components/dropdowndescription.astro";

// Vi henter alle ID’er til de produkter, vi gerne vil lave individuelle sider for:
export async function getStaticPaths() {
  // Det her er nøglen til vores Supabase-database – den giver adgang til at hente data
  const apikey =
    "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqaW9pbG52bW1ha3lvY3FhdXdoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc4OTk5MzAsImV4cCI6MjA2MzQ3NTkzMH0.lJHBOdRj_eDmkVncIRtyW1Ty8UleaWHyYMXT0tNxPhs";
  const url =
    "https://xjioilnvmmakyocqauwh.supabase.co/rest/v1/Products?select=id";
  // Her henter vi kun ID’erne fra databasen

  // fetch = "gå ud på nettet og hent noget"
  // await = "vent på svaret, før vi går videre"
  const res = await fetch(url, {
    headers: {
      apikey: apikey, // vi sender nøglen med som adgang
    },
  });

  const data = await res.json(); // Vi laver svaret om til et JavaScript-array

  // Her laver vi en liste over ID’er, som Astro bruger til at bygge en side til hvert produkt
  //  map = "for hver ting i arrayet, gør dette"
  // params = bruges af Astro til at lave sider med fx /produkt/1 and /produkt/2

  return data.map((product: { id: number }) => ({
    // id = "parameter" – det er det, vi bruger i URL’en til at identificere hvert produkt
    // toString() = "gør tallet til en tekststreng, så det kan bruges i URL’en"
    // params = { id: product.id.toString() } – dette er det format, Astro forventer
    params: { id: product.id.toString() },
  }));
}

// 2. Hent produktdata baseret på ID:
const { id } = Astro.params; // Her får vi id’et fra URL’en – fx “3” hvis vi er på /produkt/3

const apikey =
  "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhqaW9pbG52bW1ha3lvY3FhdXdoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc4OTk5MzAsImV4cCI6MjA2MzQ3NTkzMH0.lJHBOdRj_eDmkVncIRtyW1Ty8UleaWHyYMXT0tNxPhs";
const url = `https://xjioilnvmmakyocqauwh.supabase.co/rest/v1/Products?id=eq.${id}&select=*`;

const options = {
  headers: {
    apikey: apikey,
  },
};
// Nu henter vi det ene produkt med det ID vi fik fra URL’en
const data = await fetch(url, options).then((res) => res.json());
// Vi får et array, men der er kun ét produkt i – så vi tager det første (og eneste)
const product = data[0];

// apikey:
// Forklaring: En slags adgangskode, der giver os lov til at hente data fra databasen.
// Eksempel: Skal med i vores fetch-kald, ellers får vi ikke adgang.

// array
// En liste med flere ting i – fx en liste med produkter.
// Eksempel: data = [produkt1, produkt2, produkt3].

// async
// Betyder at funktionen kan arbejde “asynkront” – altså vente på data uden at fryse alt andet.
// Eksempel: Bruges sammen med await.

// async
// Betyder at funktionen kan arbejde “asynkront” – altså vente på data uden at fryse alt andet.
// Eksempel: Bruges sammen med await.

// Astro.params
// Giver adgang til den værdi, der står i URL’en – fx produktets ID.
// Eksempel: På /produkt/3 er Astro.params.id = 3.
// Params Betyder “parametre” – altså værdier fra URL’en.

// getStaticPaths()
// En Astro-funktion, der bygger statiske sider for hver produkt-id.
// Eksempel: Bruges til at lave sider som /produkt/1, /produkt/2 osv.
---

<Layout>
  <header>
    <Menublack />
  </header>
  <section class="main">
    <div class="margin">
      <RoundCTA ctaText="Tilbage" ctaLink="/shopcoffee" />
    </div>

    <article class="margin grid_1-1">
      <h1 class="right">{product.display_name}</h1>
      <div class="left">
        <ProductPictures
          img1={product.img1}
          img2={product.img2}
          img3={product.img3}
          img4={product.img4}
        />
      </div>
      <div class="right">
        <p>
          <strong>Bønne: {product.bean}</strong>
        </p>
        <p>
          <strong>Pris: {product.price_250} kr. / 250g </strong>
        </p>
        <p>
          <strong>Pris: {product.price_1000} kr. / 1000g</strong>
        </p>
        <p>{product.description}</p>
        <div>
          <div class="icons">
            <div>
              <img src={product.icon1} alt={product.icon1_text} />
              <p>{product.icon1_text}</p>
            </div>
            <div>
              <img src={product.icon2} alt={product.icon2_text} />
              <p>{product.icon2_text}</p>
            </div>
            <div>
              <img src={product.icon3} alt={product.icon3_text} />
              <p>{product.icon3_text}</p>
            </div>
          </div>
          <Amount />

          <div class="cta-row">
            <AmountCTA />

            <RoundCTA ctaText="Læg i kurv" />
          </div>
        </div>
      </div>
    </article>

    <Dropdowndescription
      displayname={product.display_name}
      origin={product.origin}
      bean={product.bean}
      producer={product.producer}
      process={product.process}
      elevation={product.elevation}
      detaileddescription={product.detailed_description}
    />
    <Brewguide />
    <section class="margin">
      <h2>Se vores unikke kaffeudvalg</h2>
      <p>
        Oplev vores udvalg af selvristede kaffebønner med forskellige
        smagsnuancer og ristegrader – tilpasset enhver kaffesmag.
      </p>

      <Productslider />
    </section>

    <Footer />
  </section>

  <style>
    a {
      text-decoration: none;
      color: var(--background-color);
      background-color: var(--green-color);
      padding: 5px 7px;
      margin-bottom: 20px;
      font-size: 16px;
    }

    .main {
      margin-top: 150px;
      max-width: 100%;
    }

    article {
      overflow: hidden;
    }

    .hide {
      display: none;
    }

    .icons {
      display: flex;
      flex-direction: column;
      margin-bottom: 25px;
      align-items: start;
      margin-left: 0;
    }
    .icons div {
      display: flex;
      flex-direction: row;
      align-items: center;
      gap: 10px;
      margin-bottom: 20px;
    }

    .icons img {
      width: 15%;
      object-fit: cover;
      aspect-ratio: 1 / 1;
    }

    .icons p {
      display: flex;
      align-items: center;
    }

    .cta-row {
      display: flex;
      gap: 16px;
      align-items: center;
      margin-bottom: 18px;
    }
    h1 {
      text-align: center;
    }
    .left {
      height: 50%;
      max-width: 100%;
    }

    .right {
      margin-left: 30px;
    }
    @media (min-width: 768px) {
      a {
        font-size: 18px;
        padding: 10px 10px;
      }

      article {
        overflow: hidden;
      }

      .grid_1-1 {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 10px;
      }
      h1 {
        grid-column: 2 / span 1;
        text-align: left;
      }
      .icons {
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        gap: 4vw;
        margin-right: auto;
      }

      .icons img {
        width: 4vw;
        object-fit: contain;
      }
    }
  </style>
</Layout>
